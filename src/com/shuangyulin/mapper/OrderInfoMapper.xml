<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.shuangyulin.mapper.OrderInfoMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加订单记录 -->
	<insert id="addOrderInfo" parameterType="orderInfo">
		insert into t_orderInfo(scenicObj,orderDate,price,userObj,orderTime,shState) values 
		(#{scenicObj.scenicId},#{orderDate},#{price},#{userObj.user_name},#{orderTime},#{shState})
	</insert>

	<!-- 按照查询条件分页查询订单记录 -->
	<select id="queryOrderInfo" resultMap="orderInfoMap" >
		select t_orderInfo.* from t_orderInfo,t_scenic,t_userInfo ${where} and t_orderInfo.scenicObj = t_scenic.scenicId and t_orderInfo.userObj = t_userInfo.user_name limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="orderInfoMap" type="orderInfo">
        <id property="orderId" column="orderId" />
        <association property="scenicObj" column="scenicObj" select="com.shuangyulin.mapper.ScenicMapper.getScenic" />
        <association property="userObj" column="userObj" select="com.shuangyulin.mapper.UserInfoMapper.getUserInfo" />
    </resultMap>

    <!-- 按照查询条件查询所有订单记录 -->
	<select id="queryOrderInfoList" resultMap="orderInfoMap" >
		select t_orderInfo.* from t_orderInfo,t_scenic,t_userInfo ${where} and t_orderInfo.scenicObj = t_scenic.scenicId and t_orderInfo.userObj = t_userInfo.user_name
	</select>

    <!-- 按照查询条件的订单记录数 -->
	<select id="queryOrderInfoCount" resultType="int">
		select count(*) from t_orderInfo,t_scenic,t_userInfo ${where} and t_orderInfo.scenicObj = t_scenic.scenicId and t_orderInfo.userObj = t_userInfo.user_name
	</select>

	<!-- 根据主键查询某个订单记录 -->
	<select id="getOrderInfo" parameterType="int" resultMap="orderInfoMap">
		select * from t_orderInfo where t_orderInfo.orderId = #{orderId}
	</select>

	<!-- 更新订单记录 -->
	<update id="updateOrderInfo" parameterType="orderInfo">
		update t_orderInfo set scenicObj=#{scenicObj.scenicId},orderDate=#{orderDate},price=#{price},userObj=#{userObj.user_name},orderTime=#{orderTime},shState=#{shState} where orderId = #{orderId}
	</update>

	<!-- 删除订单记录 -->
	<delete id="deleteOrderInfo" parameterType="int">
		delete from t_orderInfo where orderId=#{orderId}
	</delete>

</mapper>
