<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.shuangyulin.mapper.CityMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加城市记录 -->
	<insert id="addCity" parameterType="city">
		insert into t_city(cityNo,cityName) values 
		(#{cityNo},#{cityName})
	</insert>

	<!-- 按照查询条件分页查询城市记录 -->
	<select id="queryCity" resultMap="cityMap" >
		select t_city.* from t_city ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="cityMap" type="city">
        <id property="cityNo" column="cityNo" />
    </resultMap>

    <!-- 按照查询条件查询所有城市记录 -->
	<select id="queryCityList" resultMap="cityMap" >
		select t_city.* from t_city ${where}
	</select>

    <!-- 按照查询条件的城市记录数 -->
	<select id="queryCityCount" resultType="int">
		select count(*) from t_city ${where}
	</select>

	<!-- 根据主键查询某个城市记录 -->
	<select id="getCity" parameterType="string" resultMap="cityMap">
		select * from t_city where t_city.cityNo = #{cityNo}
	</select>

	<!-- 更新城市记录 -->
	<update id="updateCity" parameterType="city">
		update t_city set cityName=#{cityName} where cityNo = #{cityNo}
	</update>

	<!-- 删除城市记录 -->
	<delete id="deleteCity" parameterType="string">
		delete from t_city where cityNo=#{cityNo}
	</delete>

</mapper>
